// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`icon > renders icon inline type with title text 1`] = `
<DocumentFragment>
  <svg
    aria-labelledby="GENERATED-0"
    class="icon icon--mic"
    role="img"
  >
    <use
      href="#icon-mic"
    />
    <title
      id="GENERATED-0"
    >
      inline icon
    </title>
  </svg>
  <script>
    ((runtimeId) =&gt; (
(self[runtimeId] = (
  renderId,
  prefix = runtimeId + renderId,
  prefixLen = prefix.length,
  lookup = {},
  visits = [],
  doc = document,
  walker = doc.createTreeWalker(
    doc,
    129 /* NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_ELEMENT */,
  ),
) =&gt;
  doc = (self[runtimeId][renderId] = {
    i: prefix,
    d: doc,
    l: lookup,
    v: visits,
    x() {},
    w(node, op, id) {
      while ((node = walker.nextNode())) {
        doc.x(
          (op =
            (op = node.data) &&
            !op.indexOf(prefix) &&
            ((lookup[(id = op.slice(prefixLen + 1))] = node), op[prefixLen])),
          id,
          node,
        );

        if (op &gt; "#") {
          visits.push(node);
        }
      }
    },
  })),
self[runtimeId]
))("M")("_");M._.r=[_=&gt;(_.a=[0,{htmlInput:{}}]),"src/tags/evo-icon/index.marko_0_htmlInput",1];M._.w()
  </script>
</DocumentFragment>
`;

exports[`icon > renders icon inline type without title text 1`] = `
<DocumentFragment>
  <svg
    aria-hidden="true"
    class="icon icon--mic"
  >
    <use
      href="#icon-mic"
    />
  </svg>
  <script>
    ((runtimeId) =&gt; (
(self[runtimeId] = (
  renderId,
  prefix = runtimeId + renderId,
  prefixLen = prefix.length,
  lookup = {},
  visits = [],
  doc = document,
  walker = doc.createTreeWalker(
    doc,
    129 /* NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_ELEMENT */,
  ),
) =&gt;
  doc = (self[runtimeId][renderId] = {
    i: prefix,
    d: doc,
    l: lookup,
    v: visits,
    x() {},
    w(node, op, id) {
      while ((node = walker.nextNode())) {
        doc.x(
          (op =
            (op = node.data) &&
            !op.indexOf(prefix) &&
            ((lookup[(id = op.slice(prefixLen + 1))] = node), op[prefixLen])),
          id,
          node,
        );

        if (op &gt; "#") {
          visits.push(node);
        }
      }
    },
  })),
self[runtimeId]
))("M")("_");M._.r=[_=&gt;(_.a=[0,{htmlInput:{}}]),"src/tags/evo-icon/index.marko_0_htmlInput",1];M._.w()
  </script>
</DocumentFragment>
`;

exports[`icon > renders icon no-skin-classes 1`] = `
<DocumentFragment>
  <svg
    aria-hidden="true"
    class="custom-class icon icon--mic"
  >
    <use
      href="#icon-mic"
    />
  </svg>
  <script>
    ((runtimeId) =&gt; (
(self[runtimeId] = (
  renderId,
  prefix = runtimeId + renderId,
  prefixLen = prefix.length,
  lookup = {},
  visits = [],
  doc = document,
  walker = doc.createTreeWalker(
    doc,
    129 /* NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_ELEMENT */,
  ),
) =&gt;
  doc = (self[runtimeId][renderId] = {
    i: prefix,
    d: doc,
    l: lookup,
    v: visits,
    x() {},
    w(node, op, id) {
      while ((node = walker.nextNode())) {
        doc.x(
          (op =
            (op = node.data) &&
            !op.indexOf(prefix) &&
            ((lookup[(id = op.slice(prefixLen + 1))] = node), op[prefixLen])),
          id,
          node,
        );

        if (op &gt; "#") {
          visits.push(node);
        }
      }
    },
  })),
self[runtimeId]
))("M")("_");M._.r=[_=&gt;(_.a=[0,{htmlInput:{}}]),"src/tags/evo-icon/index.marko_0_htmlInput",1];M._.w()
  </script>
</DocumentFragment>
`;
